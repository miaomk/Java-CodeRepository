<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.techwells.wumei.dao.TicketMapper">
  <resultMap id="BaseResultMap" type="com.techwells.wumei.domain.Ticket">
    <id column="ticket_id" jdbcType="INTEGER" property="ticketId" />
    <result column="activity_id" jdbcType="INTEGER" property="activityId" />
    <result column="ticket_name" jdbcType="VARCHAR" property="ticketName" />
    <result column="ticket_fee" jdbcType="DOUBLE" property="ticketFee" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="starting_at" jdbcType="INTEGER" property="startingAt" />
    <result column="purchase_limit" jdbcType="INTEGER" property="purchaseLimit" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
    <result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="updated_date" jdbcType="TIMESTAMP" property="updatedDate" />
  </resultMap>
  <sql id="Base_Column_List">
    ticket_id, activity_id, ticket_name, ticket_fee, amount, starting_at, purchase_limit, 
    start_time, end_time, deleted, created_date, updated_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_ticket
    where ticket_id = #{ticketId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_ticket
    where ticket_id = #{ticketId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.techwells.wumei.domain.Ticket">
    <selectKey keyProperty="ticketId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_ticket (activity_id, ticket_name, ticket_fee, 
      amount, starting_at, purchase_limit, 
      start_time, end_time, deleted, 
      created_date, updated_date)
    values (#{activityId,jdbcType=INTEGER}, #{ticketName,jdbcType=VARCHAR}, #{ticketFee,jdbcType=DOUBLE}, 
      #{amount,jdbcType=INTEGER}, #{startingAt,jdbcType=INTEGER}, #{purchaseLimit,jdbcType=INTEGER}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=BIT}, 
      #{createdDate,jdbcType=TIMESTAMP}, #{updatedDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.techwells.wumei.domain.Ticket">
    <selectKey keyProperty="ticketId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_ticket
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="activityId != null">
        activity_id,
      </if>
      <if test="ticketName != null">
        ticket_name,
      </if>
      <if test="ticketFee != null">
        ticket_fee,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="startingAt != null">
        starting_at,
      </if>
      <if test="purchaseLimit != null">
        purchase_limit,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="createdDate != null">
        created_date,
      </if>
      <if test="updatedDate != null">
        updated_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="activityId != null">
        #{activityId,jdbcType=INTEGER},
      </if>
      <if test="ticketName != null">
        #{ticketName,jdbcType=VARCHAR},
      </if>
      <if test="ticketFee != null">
        #{ticketFee,jdbcType=DOUBLE},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="startingAt != null">
        #{startingAt,jdbcType=INTEGER},
      </if>
      <if test="purchaseLimit != null">
        #{purchaseLimit,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
      <if test="createdDate != null">
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedDate != null">
        #{updatedDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.techwells.wumei.domain.Ticket">
    update t_ticket
    <set>
      <if test="activityId != null">
        activity_id = #{activityId,jdbcType=INTEGER},
      </if>
      <if test="ticketName != null">
        ticket_name = #{ticketName,jdbcType=VARCHAR},
      </if>
      <if test="ticketFee != null">
        ticket_fee = #{ticketFee,jdbcType=DOUBLE},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="startingAt != null">
        starting_at = #{startingAt,jdbcType=INTEGER},
      </if>
      <if test="purchaseLimit != null">
        purchase_limit = #{purchaseLimit,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
      <if test="createdDate != null">
        created_date = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedDate != null">
        updated_date = #{updatedDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ticket_id = #{ticketId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.techwells.wumei.domain.Ticket">
    update t_ticket
    set activity_id = #{activityId,jdbcType=INTEGER},
      ticket_name = #{ticketName,jdbcType=VARCHAR},
      ticket_fee = #{ticketFee,jdbcType=DOUBLE},
      amount = #{amount,jdbcType=INTEGER},
      starting_at = #{startingAt,jdbcType=INTEGER},
      purchase_limit = #{purchaseLimit,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=BIT},
      created_date = #{createdDate,jdbcType=TIMESTAMP},
      updated_date = #{updatedDate,jdbcType=TIMESTAMP}
    where ticket_id = #{ticketId,jdbcType=INTEGER}
  </update>

  <update id="deleteByActivityId" >
    UPDATE t_ticket
    SET deleted = 1
    WHERE
        activity_id = #{activityId}
  </update>

  <update id="batchDeleteByActivityId">
    UPDATE t_ticket
    SET deleted = 1
    WHERE
        activity_id IN
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
          #{id}
        </foreach>
  </update>

  <select id="selectByActivityId" resultType="com.techwells.wumei.domain.Ticket">
  SELECT
      t.ticket_id AS ticketId,
      t.activity_id AS activityId,
      t.ticket_name AS ticketName,
      t.ticket_fee AS ticketFee,
      t.amount AS amount,
      t.starting_at AS startingAt,
      t.purchase_limit AS purchaseLimit,
      t.start_time AS startTime,
      t.end_time AS endTime
  FROM
      t_ticket t
      INNER JOIN t_activity a ON ( t.activity_id = a.activity_id )
  WHERE
      t.activity_id = #{activityId}
      AND t.deleted = 0
      AND a.deleted = 0
  </select>

  <select id="getActivityTicketFee" resultType="com.techwells.wumei.domain.rs.RsActivityManage">
    SELECT
        activity_id AS activityId,
        ticket_fee AS ticketPrice
    FROM
        t_ticket
    WHERE
        deleted = 0
        AND activity_id IN
    <foreach collection="activityIds" item="activityId" open="(" close=")" separator=",">
      #{activityId}
    </foreach>
  </select>

  <select id="selectTicketList" resultType="com.techwells.wumei.domain.Ticket">
    SELECT
      t.ticket_id AS ticketId,
      t.activity_id AS activityId,
      t.ticket_name AS ticketName,
      t.ticket_fee AS ticketFee,
      t.amount AS amount,
      t.starting_at AS startingAt,
      t.purchase_limit AS purchaseLimit,
      t.start_time AS startTime,
      t.end_time AS endTime
  FROM
      t_ticket t
      INNER JOIN t_activity a ON ( t.activity_id = a.activity_id )
  WHERE
      t.activity_id = #{activityId}
      AND t.deleted = 0
      AND a.deleted = 0
  </select>

  <select id="getTicketInfoByActivity" resultMap="BaseResultMap">
    SELECT
        ticket_id,
        activity_id,
        ticket_name,
        ticket_fee,
        amount,
        starting_at,
        purchase_limit,
        start_time,
        end_time
    FROM
        t_ticket
    WHERE
        activity_id = #{activityId}
        AND deleted = 0
  </select>
</mapper>